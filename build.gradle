/*
 *
 * Copyright 2015-2025 Martin Goellnitz
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
plugins {
  id "com.netflix.nebula.ospackage" version "12.0.0"
}

// Use the Java plugin to to get the sourceSets defined
apply plugin: 'distribution'
apply plugin: 'java-base'

version = '1.1-SNAPSHOT'

sourceSets {
  main {
    resources {
      srcDir 'bin'
    }
  }
  test {
    resources {
      srcDir 'test'
    }
  }
}

// Don't issue tar archive
distTar.enabled = false

distributions {
  main {
    contents {
      from 'README.md'
      from 'bin'
    }
  }
}

ospackage {
  packageName = project.name
  version = '1.1-SNAPSHOT'
  release = 1
  maintainer = 'Martin Goellnitz'
  url = 'https://mgoellnitz.github.io/trackdown'
  into("/usr/share/$project.name") {
    from '.'
    include 'README.md'
  }
  into("/usr/lib/$packageName") {
    from "bin"
    include '*.sh'
  }
}

buildDeb {
  link("/usr/bin/$project.name", "/usr/lib/$packageName/trackdown.sh")
  link("/usr/bin/td", "/usr/lib/$packageName/trackdown.sh")
}

buildRpm.dependsOn buildDeb

buildRpm {
  link("/usr/bin/$project.name", "/usr/lib/$packageName/trackdown.sh")
  link("/usr/bin/td", "/usr/lib/$packageName/trackdown.sh")
}

distZip.dependsOn buildRpm

check.doFirst {
  exec {
    commandLine "mkdir", "-p", "$buildDir/test/.trackdown"
  }
  def tests = fileTree('test') {
    include '**/*.sh'
    exclude '**/shelltest.sh'
  }
  tests.each { file ->
    // print "$file \n"
    exec {
      commandLine "$file"
    }
  }
}

task encodeMessage(type:Exec) {
  workingDir "$projectDir"
  commandLine 'bash', '-c', \
    "cat usage-template.txt |gzip -9c|base64|sed -e 's/\$/ \\\\/g' > usage-template.gzip.base64.txt"
}
